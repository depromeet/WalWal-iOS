PROJECT_ROOT = File.expand_path('..', Dir.pwd)
puts "Project root directory: #{PROJECT_ROOT}"



default_platform(:ios)

platform :ios do
  desc "개발용 앱을 TestFlight에 업로드"
  lane :dev do |options|
    build_and_upload_app(
      app_identifier: "olderStoneBed.io.walwal.dev",
      scheme: "DEV-WalWal",
      configuration: "Debug"
    )

    # dSYM 다운로드 및 Firebase 업로드
    download_and_upload_dsyms(app_identifier: "olderStoneBed.io.walwal.dev")
  end

  desc "배포용 앱을 TestFlight에 업로드"
  lane :release do |options|
    build_and_upload_app(
      app_identifier: "olderStoneBed.io.walwal",
      scheme: "PROD-WalWal",
      configuration: "Release"
    )

    # dSYM 다운로드 및 Firebase 업로드
    download_and_upload_dsyms(app_identifier: "olderStoneBed.io.walwal")
  end

  lane :certificates do
    register_devices(devices_file: "./fastlane/devices.txt")
    match(type: "development")
    match(type: "appstore")
  end
end


# 빌드를 간편하게 하기 위한 커스텀 함수들...
def build_and_upload_app(app_identifier:, scheme:, configuration:)
  

  project_path = File.join(PROJECT_ROOT, "App", "WalWal.xcodeproj")
  xcconfig_path = File.join(PROJECT_ROOT, "Config", "#{configuration}.xcconfig")
  workspace_path = File.join(PROJECT_ROOT, "WalWal.xcworkspace")
  provisioning_profile_name = "match AppStore #{app_identifier}"

  update_app_identifier(
    xcodeproj: project_path,
    plist_path: File.join(PROJECT_ROOT, "App", "WalWal-Info.plist"),
    app_identifier: app_identifier
  )

  api_key = app_store_connect_api_key(
    key_id: ENV["APPSTORE_KEY_ID"],
    issuer_id: ENV["APPSTORE_ISSUER_ID"],
    key_filepath: "fastlane/WalWal_Dev_ASCKey.p8"
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    path: project_path,
    team_id: "6NXQDZ68FD",
    profile_name: provisioning_profile_name
  )

  match(
    type: "appstore", 
    app_identifier: app_identifier,
    team_id: "6NXQDZ68FD"
  )

  updeted_build_number = latest_testflight_build_number(
                            username: "cocoa9805@naver.com",
                            app_identifier: app_identifier, 
                            team_id: "126120741"
                          ) + 1

  increment_build_number(
    xcodeproj: project_path,
    build_number: updeted_build_number
  )

  build_app(
    workspace: workspace_path,
    scheme: scheme,
    configuration: configuration,
    xcconfig: xcconfig_path,
    export_method: "app-store",
    export_options: {
	  method: "app-store",
	  provisioningProfiles: { 
		app_identifier => provisioning_profile_name
	  },
	  team_id: "6NXQDZ68FD"
    },
    codesigning_identity: "Apple Distribution: yongin cho (6NXQDZ68FD)",
    xcargs: "CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=6NXQDZ68FD"
  )

  upload_to_testflight

end

# dSYM 다운로드 및 Firebase Crashlytics 업로드 함수
def download_and_upload_dsyms(app_identifier:)
  # dSYM 파일 다운로드
  download_dsyms(
    app_identifier: app_identifier,
    version: latest_testflight_build_number(
      username: "cocoa9805@naver.com",
      app_identifier: app_identifier,
      team_id: "126120741"
    )
  )

  # 압축 해제
  unzip_dsyms

  # Firebase Crashlytics에 dSYM 업로드
  upload_symbols_to_crashlytics(
    gsp_path: "App/Resources/#{app_identifier.include?('dev') ? 'Dev' : 'Release'}/GoogleService-Info.plist"
  )

  # 사용한 dSYM 파일 삭제
  clean_build_artifacts
end